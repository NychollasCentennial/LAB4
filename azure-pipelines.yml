trigger:
- main

pool:
  name: Default # Ensure this matches your self-hosted agent's pool name

steps:
  # Step 1: Install the .NET SDK
  - task: UseDotNet@2
    displayName: 'Install .NET 8 SDK'
    inputs:
      packageType: 'sdk'
      version: '8.0.x'

  # Step 2: Restore NuGet packages (optional but recommended for build dependencies)
  - task: NuGetCommand@2
    displayName: 'Restore NuGet Packages'
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'

  # Step 3: Build the Library Project
  - script: dotnet build "**/StringExtensionsLibrary.csproj" --configuration Release
    displayName: 'Build Library Project'

  # Step 4: Pack the Library Project as a NuGet Package
  - script: dotnet pack "**/StringExtensionsLibrary.csproj" --configuration Release --output $(Build.ArtifactStagingDirectory)
    displayName: 'Pack Library Project as NuGet Package'

  # Step 5: Restore Dependencies for the Console Project
  - script: dotnet restore "**/Lab4ConsConsoleAppole.csproj"
    displayName: 'Restore NuGet Packages for Console Project'

  # Step 6: Build the Console Project
  - script: dotnet build "**/ConsoleApp.csproj" --configuration Release
    displayName: 'Build Console Project'

  # Step 7: Pack the Console Project as a NuGet Package
  - script: dotnet pack "**/ConsoleApp.csproj" --configuration Release --output $(Build.ArtifactStagingDirectory)
    displayName: 'Pack Console Project as NuGet Package'

  # Step 8: Authenticate with Azure Artifacts Feed
  
  - task: NuGetToolInstaller@1

  # - script: |
  #     dotnet build --configuration Release
  #     dotnet pack --configuration Release -o $(Build.ArtifactStagingDirectory)
  #   displayName: 'Build and Package'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'd6307433-fd35-4fb9-933f-59e64efb3658'